{"version":3,"sources":["node_modules/browser-pack/_prelude.js","all-charts.js","node_modules/uuid/rng-browser.js","node_modules/uuid/uuid.js","src/AllCharts.js","src/lib/BaseChart.js","src/lib/HistogramChart.js","src/lib/LineChart.js","src/lib/PieChart.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","global","rng","crypto","getRandomValues","_rnds8","Uint8Array","_rnds","Array","Math","random","this","self","window","2","parse","buf","offset","ii","toLowerCase","replace","oct","_hexToByte","unparse","bth","_byteToHex","v1","options","b","clockseq","undefined","_clockseq","msecs","Date","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","v4","rnds","_rng","toString","substr","_seedBytes","uuid","./rng","3","AllCharts","PieChart","HistogramChart","LineChart","./lib/HistogramChart","./lib/LineChart","./lib/PieChart","4","UUID","BaseChart","_init","conf","series","renderTo","container","document","querySelector","canvas","createElement","id","name","width","clientWidth","height","clientHeight","style","border","appendChild","_drawChart","chartsBasePrototype","5","baseChart","_this","getContext","ctx","chartPadding","drawArea","x","y","marginBetweenBars","max","data","reduce","prevMax","d","value","barWidth","currentBarX","transform","forEach","fillStyle","color","fillRect","prototype","./BaseChart.js","6","pointSpacing","pointRadius","strokeStyle","beginPath","moveTo","lineTo","stroke","_i","arc","PI","fill","7","origin","radius","sum","acc","angle","relativePieSliceAngle","cos","sin","closePath"],"mappings":"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","file":"all-charts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n\nvar rng;\n\nif (global.crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],2:[function(require,module,exports){\n//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n\n},{\"./rng\":1}],3:[function(require,module,exports){\n(function (global){\n'use strict';\n\nglobal.AllCharts = {};\n\nglobal.AllCharts.PieChart = require('./lib/PieChart');\nglobal.AllCharts.HistogramChart = require('./lib/HistogramChart');\nglobal.AllCharts.LineChart = require('./lib/LineChart');\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{\"./lib/HistogramChart\":5,\"./lib/LineChart\":6,\"./lib/PieChart\":7}],4:[function(require,module,exports){\n'use strict';\n\nvar UUID = require('uuid');\n\nvar BaseChart = function BaseChart() {\n\n    this._init = function () {\n        this.conf = {};\n        this.series = [];\n    };\n\n    this.renderTo = function (o) {\n        var container;\n        if (typeof o === 'string') {\n            // assume CSS selector here\n            container = document.querySelector(o);\n        }\n\n        var canvas;\n        if (canvas === undefined) {\n            canvas = document.createElement('canvas');\n            canvas.id = this.conf.name || 'chart-' + UUID.v4();\n            canvas.width = container.clientWidth; // https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements\n            canvas.height = container.clientHeight;\n            //canvas.style.zIndex   = 8;\n            //canvas.style.position = \"absolute\";\n            canvas.style.border = '1px solid #999';\n\n            container.appendChild(canvas);\n        }\n\n        this._drawChart(canvas);\n    };\n\n    this._drawChart = function (canvas) {\n        throw new Error('Don\\'t render the BaseChart, use a specialized type (PieChart, HistogramChart,...)');\n    };\n};\n\nvar chartsBasePrototype = new BaseChart();\n\nmodule.exports = chartsBasePrototype;\n\n},{\"uuid\":2}],5:[function(require,module,exports){\n'use strict';\n\nvar baseChart = require('./BaseChart.js');\n\nvar HistogramChart = function HistogramChart() {\n    this._init();\n\n    this._drawChart = function (canvas) {\n        var _this = this;\n\n        if (canvas.getContext) {\n            var ctx = canvas.getContext('2d');\n\n            // todo pre-compute drawing area dimensions...\n            // var rect = canvas.getBoundingClientRect();\n            var chartPadding = 20;\n\n            var drawArea = {\n                x: chartPadding,\n                y: chartPadding,\n                width: canvas.clientWidth - chartPadding * 2,\n                height: canvas.clientHeight - chartPadding * 2\n            };\n\n            var marginBetweenBars = 20;\n\n            var max = this.series[0].data.reduce(function (prevMax, d) {\n                return d.value > prevMax ? d.value : prevMax;\n            }, 0);\n\n            var barWidth = (drawArea.width - (this.series[0].data.length - 1) * marginBetweenBars) / this.series[0].data.length;\n\n            var currentBarX = drawArea.x;\n\n            // http://stackoverflow.com/questions/28574628/invert-x-and-y-coordinates-on-html5-canvas\n            ctx.transform(1, 0, 0, -1, 0, canvas.height);\n\n            this.series[0].data.forEach(function (d) {\n                ctx.fillStyle = _this.series[0].color;\n                ctx.fillRect(currentBarX, drawArea.y, barWidth, d.value * drawArea.height / max);\n                currentBarX += barWidth + marginBetweenBars;\n            });\n        } else {\n            // TODO fallback to unsupported code\n        }\n    };\n};\n\nHistogramChart.prototype = baseChart;\n\nmodule.exports = HistogramChart;\n\n},{\"./BaseChart.js\":4}],6:[function(require,module,exports){\n'use strict';\n\nvar baseChart = require('./BaseChart.js');\n\nvar LineChart = function LineChart() {\n    this._init();\n\n    this._drawChart = function (canvas) {\n\n        if (canvas.getContext) {\n            var ctx = canvas.getContext('2d');\n\n            var chartPadding = 20;\n\n            var drawArea = {\n                x: chartPadding,\n                y: chartPadding,\n                width: canvas.clientWidth - chartPadding * 2,\n                height: canvas.clientHeight - chartPadding * 2\n            };\n\n            var max = this.series[0].data.reduce(function (prevMax, d) {\n                return d.value > prevMax ? d.value : prevMax;\n            }, 0);\n\n            var pointSpacing = drawArea.width / (this.series[0].data.length - 1);\n\n            var pointRadius = 4;\n\n            ctx.transform(1, 0, 0, -1, 0, canvas.height);\n\n            ctx.strokeStyle = this.series[0].color;\n            ctx.fillStyle = this.series[0].color;\n            ctx.beginPath();\n            ctx.moveTo(0, this.series[0].data[0].value * drawArea.height / max);\n            // lines\n            for (var i = 1; i < this.series[0].data.length; i++) {\n                ctx.lineTo(i * pointSpacing, this.series[0].data[i].value * drawArea.height / max);\n            }\n            ctx.stroke();\n            // dots\n            for (var _i = 1; _i < this.series[0].data.length; _i++) {\n                ctx.beginPath();\n                ctx.arc(_i * pointSpacing, this.series[0].data[_i].value * drawArea.height / max, pointRadius, 0, 2 * Math.PI);\n                ctx.fill();\n            }\n        }\n    };\n};\n\nLineChart.prototype = baseChart;\n\nmodule.exports = LineChart;\n\n},{\"./BaseChart.js\":4}],7:[function(require,module,exports){\n'use strict';\n\nvar baseChart = require('./BaseChart.js');\n\nvar PieChart = function PieChart() {\n    this._init();\n\n    this._drawChart = function (canvas) {\n\n        if (canvas.getContext) {\n            var ctx = canvas.getContext('2d');\n\n            var origin = {\n                x: canvas.clientWidth / 2,\n                y: canvas.clientHeight / 2\n            };\n\n            var radius = 100;\n\n            var sum = this.series[0].data.reduce(function (acc, d) {\n                return acc + d.value;\n            }, 0);\n\n            var angle = 0;\n\n            this.series[0].data.forEach(function (d) {\n                // draw circles\n                // https://en.wikipedia.org/wiki/Circle#Equations\n                // http://stackoverflow.com/questions/839899/how-do-i-calculate-a-point-on-a-circle-s-circumference\n                // https://www.mathsisfun.com/data/pie-charts.html\n                var relativePieSliceAngle = d.value * 2 * Math.PI / sum;\n\n                ctx.beginPath();\n                ctx.moveTo(origin.x, origin.y);\n                ctx.lineTo(origin.x + radius * Math.cos(angle), origin.y + radius * Math.sin(angle));\n\n                ctx.arc(origin.x, origin.y, radius, angle, angle + relativePieSliceAngle); // https://developer.mozilla.org/fr/docs/Web/API/CanvasRenderingContext2D/arc\n                ctx.lineTo(origin.x, origin.y);\n                ctx.fillStyle = d.color;\n                ctx.fill();\n                ctx.closePath();\n                angle += relativePieSliceAngle;\n            });\n        }\n    };\n};\n\nPieChart.prototype = baseChart;\n\nmodule.exports = PieChart;\n\n},{\"./BaseChart.js\":4}]},{},[3])\n\n","\nvar rng;\n\nif (global.crypto && crypto.getRandomValues) {\n  // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n  // Moderately fast, high quality\n  var _rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(_rnds8);\n    return _rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  _rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return _rnds;\n  };\n}\n\nmodule.exports = rng;\n\n","//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar _rng = require('./rng');\n\n// Maps for number <-> hex string conversion\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\n// **`parse()` - Parse a UUID into it's component bytes**\nfunction parse(s, buf, offset) {\n  var i = (buf && offset) || 0, ii = 0;\n\n  buf = buf || [];\n  s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n    if (ii < 16) { // Don't overflow!\n      buf[i + ii++] = _hexToByte[oct];\n    }\n  });\n\n  // Zero out remaining bytes if string was short\n  while (ii < 16) {\n    buf[i + ii++] = 0;\n  }\n\n  return buf;\n}\n\n// **`unparse()` - Convert UUID byte array (ala parse()) into a string**\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = _rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; n++) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : unparse(b);\n}\n\n// **`v4()` - Generate random UUID**\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v4(options, buf, offset) {\n  // Deprecated - 'format' argument, as supported in v1.2\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || _rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ii++) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || unparse(rnds);\n}\n\n// Export public API\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\nuuid.parse = parse;\nuuid.unparse = unparse;\n\nmodule.exports = uuid;\n","global.AllCharts = {};\n\nglobal.AllCharts.PieChart = require('./lib/PieChart');\nglobal.AllCharts.HistogramChart = require('./lib/HistogramChart');\nglobal.AllCharts.LineChart = require('./lib/LineChart');","var UUID = require('uuid');\n\nvar BaseChart = function() {\n\n    this._init = function() {\n        this.conf = {};\n        this.series = [];\n    };\n\n    this.renderTo = function(o) {\n        var container;\n        if(typeof o === 'string') { // assume CSS selector here\n            container = document.querySelector(o);\n        }\n\n        var canvas;\n        if (canvas === undefined) {\n            canvas = document.createElement('canvas');\n            canvas.id     = this.conf.name || 'chart-' + UUID.v4();\n            canvas.width  = container.clientWidth; // https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements\n            canvas.height = container.clientHeight;\n            //canvas.style.zIndex   = 8;\n            //canvas.style.position = \"absolute\";\n            canvas.style.border   = '1px solid #999';\n\n            container.appendChild(canvas);\n        }\n\n        this._drawChart(canvas);\n\n    };\n\n    this._drawChart = function(canvas) {\n        throw new Error('Don\\'t render the BaseChart, use a specialized type (PieChart, HistogramChart,...)' );\n    };\n};\n\nvar chartsBasePrototype = new BaseChart();\n\nmodule.exports = chartsBasePrototype;\n","var baseChart = require('./BaseChart.js');\n\nvar HistogramChart = function() {\n    this._init();\n\n    this._drawChart = function(canvas) {\n\n        if (canvas.getContext) {\n            var ctx = canvas.getContext('2d');\n\n            // todo pre-compute drawing area dimensions...\n            // var rect = canvas.getBoundingClientRect();\n            var chartPadding = 20;\n\n            var drawArea = {\n                x: chartPadding,\n                y: chartPadding,\n                width: canvas.clientWidth - chartPadding * 2,\n                height: canvas.clientHeight - chartPadding * 2\n            };\n\n            var marginBetweenBars = 20;\n\n            var max = this.series[0].data.reduce( (prevMax, d) => {\n                return d.value > prevMax ? d.value : prevMax;\n            }, 0);\n\n\n            var barWidth = (drawArea.width - (this.series[0].data.length - 1) * marginBetweenBars) / this.series[0].data.length;\n\n            var currentBarX = drawArea.x;\n\n            // http://stackoverflow.com/questions/28574628/invert-x-and-y-coordinates-on-html5-canvas\n            ctx.transform(1, 0, 0, -1, 0, canvas.height);\n\n            this.series[0].data.forEach((d) => {\n                ctx.fillStyle = this.series[0].color;\n                ctx.fillRect(currentBarX, drawArea.y, barWidth, d.value * drawArea.height / max);\n                currentBarX += barWidth + marginBetweenBars;\n            });\n\n\n        } else {\n            // TODO fallback to unsupported code\n        }\n    };\n};\n\nHistogramChart.prototype = baseChart;\n\nmodule.exports = HistogramChart;","var baseChart = require('./BaseChart.js');\n\nvar LineChart = function() {\n    this._init();\n\n    this._drawChart = function(canvas) {\n\n        if (canvas.getContext) {\n            var ctx = canvas.getContext('2d');\n\n            var chartPadding = 20;\n\n            var drawArea = {\n                x: chartPadding,\n                y: chartPadding,\n                width: canvas.clientWidth - chartPadding * 2,\n                height: canvas.clientHeight - chartPadding * 2\n            };\n\n            var max = this.series[0].data.reduce( (prevMax, d) => {\n                return d.value > prevMax ? d.value : prevMax;\n            }, 0);\n\n\n            var pointSpacing = drawArea.width / (this.series[0].data.length - 1) ;\n\n            var pointRadius = 4;\n\n            ctx.transform(1, 0, 0, -1, 0, canvas.height);\n\n            ctx.strokeStyle = this.series[0].color;\n            ctx.fillStyle = this.series[0].color;\n            ctx.beginPath();\n            ctx.moveTo(0,  this.series[0].data[0].value * drawArea.height / max);\n            // lines\n            for (let i = 1; i < this.series[0].data.length; i++) {\n                ctx.lineTo(i * pointSpacing, this.series[0].data[i].value * drawArea.height / max);\n            }\n            ctx.stroke();\n            // dots\n            for (let i = 1; i < this.series[0].data.length; i++) {\n                ctx.beginPath();\n                ctx.arc(i * pointSpacing, this.series[0].data[i].value * drawArea.height / max, pointRadius, 0, 2*Math.PI);\n                ctx.fill();\n\n            }\n\n\n        }\n\n    };\n};\n\nLineChart.prototype = baseChart;\n\nmodule.exports = LineChart;","var baseChart = require('./BaseChart.js');\n\nvar PieChart = function() {\n    this._init();\n\n    this._drawChart = function(canvas) {\n\n        if (canvas.getContext) {\n            var ctx = canvas.getContext('2d');\n\n            var origin = {\n                x: canvas.clientWidth / 2,\n                y: canvas.clientHeight / 2\n            };\n\n            var radius = 100;\n\n            var sum = this.series[0].data.reduce( (acc, d) => {\n                return acc + d.value;\n            }, 0);\n\n\n            var angle = 0;\n\n            this.series[0].data.forEach((d) => {\n                // draw circles\n                // https://en.wikipedia.org/wiki/Circle#Equations\n                // http://stackoverflow.com/questions/839899/how-do-i-calculate-a-point-on-a-circle-s-circumference\n                // https://www.mathsisfun.com/data/pie-charts.html\n                var relativePieSliceAngle = d.value * 2 * Math.PI / sum;\n\n                ctx.beginPath();\n                ctx.moveTo(origin.x, origin.y);\n                ctx.lineTo( origin.x + radius * Math.cos(angle),\n                    origin.y + radius * Math.sin(angle));\n\n                ctx.arc(origin.x, origin.y, radius, angle, angle + relativePieSliceAngle); // https://developer.mozilla.org/fr/docs/Web/API/CanvasRenderingContext2D/arc\n                ctx.lineTo(origin.x, origin.y);\n                ctx.fillStyle = d.color;\n                ctx.fill();\n                ctx.closePath();\n                angle += relativePieSliceAngle;\n            });\n        }\n    };\n};\n\nPieChart.prototype = baseChart;\n\nmodule.exports = PieChart;"],"sourceRoot":"/source/"}